import math
import uuid
import wave
from pathlib import Path
from unittest import mock

import pytest

from alzabo.client import APIClient


@pytest.mark.asyncio
async def test_audio_batch(api_client: APIClient, mocker) -> None:
    urls = ["s3://foo/bar/baz", "s3://quux/wux"]
    uuids = [uuid.uuid4() for _ in range(len(urls))]
    mocker.patch("alzabo.api.audio.uuid4", side_effect=uuids)
    mock_task = mocker.patch("alzabo.worker.tasks.get_audio_processing_chain")
    assert await api_client.audio_batch(urls=urls) == [str(_) for _ in uuids]
    assert mock_task.mock_calls == [
        mock.call(str(uuids[0]), urls[0]),
        mock.call()(),
        mock.call(str(uuids[1]), urls[1]),
        mock.call()(),
    ]


@pytest.mark.asyncio
async def test_audio_fetch(api_client: APIClient, data, tmp_path: Path) -> None:
    data = await api_client.audio_fetch(
        digest="dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
        start_frame=512,
        frame_count=1024,
    )
    path = tmp_path / "audio.wav"
    path.write_bytes(data)
    with path.open("rb") as file_pointer:
        with wave.open(file_pointer) as wave_file:
            assert wave_file.getnchannels() == 1
            assert wave_file.getframerate() == 48000
            assert wave_file.getnframes() == 1024


@pytest.mark.asyncio
async def test_audio_upload(
    api_client: APIClient, mocker, recordings_path: Path
) -> None:
    uuids = [uuid.uuid4() for _ in range(2)]
    mocker.patch("alzabo.api.audio.uuid4", side_effect=uuids)
    mock_task = mocker.patch("alzabo.worker.tasks.get_audio_processing_chain")
    assert await api_client.audio_upload(path=recordings_path / "ibn-arabi-44100.wav")
    assert mock_task.mock_calls == [
        mock.call(str(uuids[0]), f"s3://test-uploads/{uuids[1]}"),
        mock.call()(),
    ]


@pytest.mark.asyncio
async def test_ping(api_client: APIClient) -> None:
    await api_client.ping()


@pytest.mark.asyncio
async def test_query_ast(
    api_client: APIClient, data: None, recordings_path: Path
) -> None:
    upload_response = await api_client.query_ast_upload(
        path=recordings_path / "ibn-arabi-44100-1s.wav"
    )
    query_response = await api_client.query_ast(vector=upload_response["vector"])
    assert query_response["entries"] and (
        query_response["entries"] == upload_response["entries"]
    )


@pytest.mark.asyncio
async def test_query_ast_upload(
    api_client: APIClient, data: None, recordings_path: Path
) -> None:
    upload_response = await api_client.query_ast_upload(
        path=recordings_path / "ibn-arabi-44100-1s.wav"
    )
    assert upload_response["entries"] == [
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.002,
            "frame_count": 60000,
            "start_frame": 0,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.005,
            "frame_count": 120000,
            "start_frame": 48000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.005,
            "frame_count": 120000,
            "start_frame": 0,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.006,
            "frame_count": 120000,
            "start_frame": 72000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.007,
            "frame_count": 120000,
            "start_frame": 24000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.012,
            "frame_count": 60000,
            "start_frame": 72000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.012,
            "frame_count": 60000,
            "start_frame": 96000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.013,
            "frame_count": 24000,
            "start_frame": 48000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.013,
            "frame_count": 60000,
            "start_frame": 144000,
        },
        {
            "digest": "af5ec6ae3e17614ebf7c2575dc8870cfbb32f12e5b7edabbdda2b02b8b9b7e5f",
            "distance": 0.013,
            "frame_count": 60000,
            "start_frame": 48000,
        },
    ]
    assert "timing" in upload_response
    expected_vector = [
        0.9190807342529297,
        0.019987953826785088,
        0.057501211762428284,
        0.0409095324575901,
        0.02939426898956299,
        0.036481134593486786,
        0.00031712427153252065,
        0.03476544842123985,
        0.0003181626962032169,
        0.0039307354018092155,
        0.004664217121899128,
        0.0020490188617259264,
        8.732060450711288e-06,
        0.0002054959477391094,
        0.00035919927177019417,
        8.454151247860864e-05,
        0.000278556311968714,
        0.0001285816979361698,
        0.002729785395786166,
        0.00047827878734096885,
        0.00013159589434508234,
        0.001065849675796926,
        0.0001900507340906188,
        0.00026996314409188926,
        0.0011904529528692365,
        0.00046858013956807554,
        0.000206309137865901,
        0.00045083832810632885,
        0.00011159124551340938,
        0.00010151477181352675,
        0.00016379484441131353,
        0.0006622737855650485,
        0.0007508643320761621,
        0.0004580139648169279,
        0.00038157100789248943,
        0.00025104335509240627,
        9.75372240645811e-05,
        4.9676669732434675e-05,
        0.0018959614681079984,
        0.000999028910882771,
        0.0002159776195185259,
        0.00019207836885470897,
        1.3821531865687575e-05,
        9.137253800872713e-05,
        0.0009401919669471681,
        3.4324777516303584e-05,
        0.0008192069362848997,
        0.0001892460568342358,
        0.004397660959511995,
        0.0006882048910483718,
        1.6428937669843435e-05,
        0.0001999063097173348,
        0.000156747832079418,
        0.00022276293020695448,
        0.00032231849036179483,
        0.00488733034580946,
        6.891543307574466e-05,
        0.00014172641385812312,
        0.00014803919475525618,
        0.00018924189498648047,
        0.0017112576169893146,
        0.00011407212150515988,
        0.0006202390650287271,
        0.0009242045925930142,
        5.073264037491754e-05,
        4.4285035983193666e-05,
        0.00011498522508190945,
        0.00021721549273934215,
        5.27879674336873e-05,
        0.0004045528476126492,
        0.0001294985122513026,
        0.00015900845755822957,
        0.006000813562422991,
        0.004717610310763121,
        0.0006791707128286362,
        8.746595995035022e-05,
        0.00039772200398147106,
        6.109460809966549e-05,
        0.00034988325205631554,
        0.00021274591563269496,
        0.0003500387247186154,
        0.003954009618610144,
        0.00018071352678816766,
        0.010635759681463242,
        0.00014864814875181764,
        0.0003112208505626768,
        0.0002568068157415837,
        0.0007543079555034637,
        0.00048046893789432943,
        0.0007429646793752909,
        0.00035943221882916987,
        0.00036896439269185066,
        6.671397568425164e-05,
        0.0002245441428385675,
        0.005832189694046974,
        0.00011674499546643347,
        0.0020408739801496267,
        0.0014697437873110175,
        0.0005142352893017232,
        0.0003897216229233891,
        0.00032498998916707933,
        7.109346915967762e-05,
        5.984916060697287e-05,
        0.00011386911501176655,
        0.0009651285945437849,
        0.004403393715620041,
        3.802484570769593e-05,
        0.00015409072511829436,
        5.1059141696896404e-05,
        0.00013248137838672847,
        0.0002858202497009188,
        0.0005683377385139465,
        0.00025525575620122254,
        0.00032976045622490346,
        0.00016024941578507423,
        0.00012063411122653633,
        0.0001936626504175365,
        0.0005751514690928161,
        0.00034203199902549386,
        0.00031401796150021255,
        0.00037414662074297667,
        1.604354656592477e-05,
        0.000244090348132886,
        0.00015671241271775216,
        0.00030567924841307104,
        6.070880772313103e-05,
        0.00015331499162130058,
        7.129510049708188e-05,
        6.83741454849951e-05,
        0.0001183774002129212,
        0.0015071149682626128,
        7.630704203620553e-05,
        0.0006547858356498182,
        0.00011831657320726663,
        0.00020632526138797402,
        0.0007616120856255293,
        5.644864359055646e-06,
        0.011495771817862988,
        0.0002863477566279471,
        0.00012472423259168863,
        0.0001445072703063488,
        9.784100257093087e-05,
        3.8104197301436216e-05,
        7.262411236297339e-05,
        1.0749624379968736e-05,
        2.042360938503407e-05,
        0.00012206094106659293,
        5.354726454243064e-05,
        6.282500544330105e-05,
        6.740667595295236e-05,
        5.6177465012297034e-05,
        4.133066613576375e-05,
        5.961363058304414e-05,
        6.483293691417202e-05,
        3.995457154815085e-05,
        8.647028880659491e-05,
        0.00013665531878359616,
        2.6259669539285824e-05,
        3.664044925244525e-05,
        6.585176743101329e-05,
        7.387406367342919e-05,
        0.00010202659177593887,
        5.645575947710313e-05,
        3.1368897907668725e-05,
        0.0001383287162752822,
        3.167527756886557e-05,
        2.2811131202615798e-05,
        5.742668508901261e-05,
        3.0353285183082335e-05,
        2.0429784854059108e-05,
        3.1052895792527124e-05,
        1.9006485672434792e-05,
        1.1678671398840379e-05,
        6.20483624516055e-05,
        8.090720075415447e-05,
        4.133476613787934e-05,
        4.2402367398608476e-05,
        1.9363482351764105e-05,
        1.7537595340400003e-05,
        6.432629015762359e-05,
        9.719267109176144e-05,
        5.634899571305141e-05,
        8.931005140766501e-06,
        2.217241308244411e-05,
        6.0527985624503344e-05,
        6.343713903333992e-05,
        4.286180774215609e-05,
        3.7058871384942904e-05,
        3.445464972173795e-05,
        0.00011159093264723197,
        2.761397627182305e-05,
        0.0001181441912194714,
        7.256105163833126e-05,
        4.550553785520606e-05,
        2.4741373636061326e-05,
        4.8840967792784795e-05,
        2.1911553631071e-05,
        1.0801499229273759e-05,
        1.9546025214367546e-05,
        3.076855500694364e-05,
        0.00019746799080166966,
        5.370538929128088e-05,
        0.0007825930370017886,
        2.2495405573863536e-05,
        7.670560444239527e-05,
        0.00014901586109772325,
        6.947717338334769e-05,
        3.640715294750407e-05,
        1.0201859367953148e-05,
        0.00010680370905902237,
        1.3895556548959576e-05,
        1.0943276720354334e-05,
        4.0413483475276735e-06,
        1.1224366971873678e-05,
        1.2565942597575486e-05,
        2.17454980884213e-05,
        0.000121357872558292,
        2.3245196643983945e-05,
        1.863048419181723e-05,
        5.603102908935398e-05,
        7.969292346388102e-05,
        7.458531763404608e-05,
        4.5689121179748327e-05,
        5.645813143928535e-05,
        0.0002718934556469321,
        2.2345457182382233e-05,
        7.043230289127678e-05,
        3.303495759610087e-05,
        4.224076837999746e-05,
        0.00021129584638401866,
        2.3888696887297556e-05,
        0.00015056037227623165,
        6.862445297883824e-05,
        0.00015721948875579983,
        0.00013420279719866812,
        0.00010332188685424626,
        4.884930240223184e-05,
        9.380634583067149e-05,
        5.818479985464364e-05,
        0.00011805690883193165,
        3.6281584470998496e-05,
        8.090288611128926e-05,
        2.722027238633018e-05,
        1.18177540571196e-05,
        0.00010461029160069302,
        3.994790677097626e-05,
        1.5475578038604e-05,
        5.79702973482199e-05,
        0.00010370279778726399,
        5.592309753410518e-05,
        3.3242333302041516e-05,
        4.8235167923849076e-05,
        0.007751175202429295,
        5.447913281386718e-05,
        0.0001276473922189325,
        8.05921881692484e-05,
        5.0984112021978945e-05,
        1.991045974136796e-05,
        0.00019716640235856175,
        9.368181781610474e-05,
        9.113272244576365e-05,
        5.131389480084181e-05,
        3.445179027039558e-05,
        4.523153984337114e-05,
        0.00012718472862616181,
        0.0001932411832967773,
        0.00011694019485730678,
        0.00037294739740900695,
        0.0007078972994349897,
        0.003116982989013195,
        0.0005930637125857174,
        6.785988080082461e-05,
        0.0003241149534005672,
        0.00024360443057958037,
        0.00012502096069511026,
        4.2036906961584464e-05,
        0.00019039299513678998,
        0.001860756310634315,
        3.259211371187121e-05,
        0.0003007642808370292,
        0.00040924432687461376,
        2.4587543521192856e-05,
        5.2785148000111803e-05,
        5.932055864832364e-05,
        0.0001667098404141143,
        7.52622727304697e-05,
        1.3192669030104298e-05,
        3.7654612242477015e-05,
        0.00021827183081768453,
        0.00019547647389117628,
        0.00014827823906671256,
        0.0005208366201259196,
        0.0001075827021850273,
        8.645239722682163e-05,
        4.202917261864059e-05,
        7.994608313310891e-05,
        4.1175273508997634e-05,
        0.0011335905874148011,
        4.09130661864765e-05,
        0.001121624605730176,
        0.0021929761860519648,
        0.0003019068099092692,
        9.290703746955842e-05,
        9.929995576385409e-05,
        0.00025438936427235603,
        1.5706780686741695e-05,
        0.0003936797147616744,
        0.0005428126896731555,
        0.0005462655099108815,
        0.00011968413309659809,
        1.7281041436945088e-05,
        4.833798811887391e-05,
        6.962241604924202e-05,
        0.00011021771933883429,
        0.0009109044913202524,
        3.9060374547261745e-05,
        0.00011157507833559066,
        0.00023496685025747865,
        7.750210352241993e-05,
        8.467406587442383e-05,
        0.00031821761513128877,
        0.0002564283204264939,
        4.83171570522245e-05,
        4.170919055468403e-05,
        5.013000190956518e-05,
        1.3842835869581904e-05,
        8.640607848064974e-05,
        1.5152902051340789e-05,
        6.648160342592746e-05,
        8.932769560487941e-05,
        7.635450310772285e-05,
        2.7403451895224862e-05,
        8.46258772071451e-05,
        2.01479961106088e-05,
        5.233056072029285e-05,
        3.9240552723640576e-05,
        2.8552365620271303e-05,
        3.0527080525644124e-05,
        7.427298442053143e-06,
        7.664557051612064e-05,
        1.6521289580850862e-05,
        0.0001932402519742027,
        4.432775313034654e-05,
        0.0004913056036457419,
        2.8537910111481324e-05,
        1.3880219739803579e-05,
        4.3260748498141766e-05,
        4.7774086851859465e-05,
        0.00010005303920479491,
        0.00010496702452655882,
        5.284508370095864e-05,
        4.3918098526773974e-05,
        0.00011322681530145928,
        0.00022408730001188815,
        0.0004610843025147915,
        0.00017837094492278993,
        0.0006309754680842161,
        0.00023714029521215707,
        0.00030321007943712175,
        0.0003103742783423513,
        0.001088636927306652,
        0.0002837659267242998,
        4.057975093019195e-05,
        4.541263115243055e-05,
        0.0005353083834052086,
        0.00014422478852793574,
        0.0006354076904244721,
        0.0004776375717483461,
        0.0014666775241494179,
        0.0008765694801695645,
        0.0002015553618548438,
        6.646892143180594e-05,
        0.00011970606283284724,
        0.00020729840616695583,
        2.4746517738094553e-05,
        0.00027641604538075626,
        0.00021093412942718714,
        7.398904563160613e-05,
        0.0018758149817585945,
        8.612621604697779e-05,
        0.00031937556923367083,
        8.184412581613287e-05,
        0.00013945710088592023,
        4.7993180487537757e-05,
        0.00021002562425564975,
        0.00014863850083202124,
        0.00038051450974307954,
        0.0002539570559747517,
        3.490601739031263e-05,
        0.0018285808619111776,
        0.000518821005243808,
        0.002067513531073928,
        0.00015833985526114702,
        0.00033263882505707443,
        0.00010991890303557739,
        4.143959449720569e-05,
        8.91687159310095e-05,
        1.4586731595045421e-05,
        0.0003575354639906436,
        9.771261102287099e-05,
        4.8505702579859644e-05,
        0.00015886902110651135,
        8.741267811274156e-05,
        8.626932685729116e-05,
        0.00011603634629864246,
        4.6604433009633794e-05,
        3.4384469472570345e-05,
        0.0005660380120389163,
        0.0005388174904510379,
        5.3411760745802894e-05,
        2.139069874829147e-05,
        0.00016357166168745607,
        3.427165938774124e-05,
        0.00025224059936590493,
        0.00033518136478960514,
        0.00015139317838475108,
        0.00014711677795276046,
        0.0037094636354595423,
        0.0003560142940841615,
        5.635480192722753e-05,
        3.0431916457018815e-05,
        6.607847899431363e-05,
        4.160880052950233e-05,
        1.9674147551995702e-05,
        0.00028732925420627,
        8.090797928161919e-05,
        0.000219331806874834,
        0.00010710590140661225,
        5.483606582856737e-05,
        2.7295187464915216e-05,
        0.00011708770762197673,
        4.132593676331453e-05,
        9.377539754495956e-06,
        3.8835551094962284e-05,
        0.0013436902081593871,
        8.394023461733013e-05,
        2.9691809686482884e-06,
        9.167032112600282e-05,
        0.0003240599762648344,
        4.821708898816723e-06,
        0.00017595045210327953,
        7.581122918054461e-05,
        0.001765920897014439,
        3.4781944123096764e-05,
        0.00128599489107728,
        3.296990325907245e-05,
        0.0004974536132067442,
        0.00019998486095573753,
        0.0005790460272692144,
        8.020953100640327e-05,
        0.0001759358710842207,
        0.0011895258212462068,
        0.0005365115939639509,
        0.0036870769690722227,
        8.54314275784418e-05,
        9.471200610278174e-05,
        0.0007470324053429067,
        4.9370450142305344e-05,
        2.3627466362086125e-05,
        0.0007608007872477174,
        5.4787764383945614e-05,
        0.00012587565288413316,
        2.5466428269282915e-05,
        4.088385321665555e-05,
        1.5975361748132855e-05,
        2.1567328076343983e-05,
        0.001866408041678369,
        0.0022575980983674526,
        0.0005485508590936661,
        0.0004941621446050704,
        0.00019049213733524084,
        4.994447954231873e-05,
        7.45816869311966e-05,
        0.0007688766927458346,
        0.0005769102717749774,
        0.0005743163637816906,
        5.2960611355956644e-05,
        0.0001474494783906266,
        2.2134540813567583e-06,
        8.941334817791358e-05,
        0.0001504749816376716,
        0.0034899802412837744,
        0.0018577600130811334,
        0.0021571931429207325,
        0.0003754693898372352,
        3.1015930289868265e-05,
        3.259771256125532e-05,
        0.0008868706063367426,
        0.0003974229621235281,
        0.0006862949812784791,
        0.00023314163263421506,
        0.00016599018999841064,
        1.3505931747204158e-05,
        0.00010645241127349436,
        0.0013444505166262388,
        0.0007143370457924902,
        0.0001231734495377168,
        4.960750447935425e-05,
        0.0008228684309870005,
        0.0003281081444583833,
        0.0029334407299757004,
        0.00018345226999372244,
        4.614142744685523e-05,
        1.9013265045941807e-05,
        0.009528986178338528,
        2.4583676349720918e-05,
        0.003947149962186813,
        0.0014537194510921836,
        0.00035264110192656517,
        0.0020076832734048367,
        0.0007494671735912561,
        0.00016903849609661847,
        0.00044207219616509974,
        9.4972938313731e-06,
        0.00020208166097290814,
        0.00047848012764006853,
        3.048736834898591e-05,
        3.233124516555108e-05,
        9.107880941883195e-06,
        0.0012178116012364626,
        0.00039365384145639837,
        4.153506233706139e-05,
        1.8281438315170817e-05,
        0.0002774118911474943,
        0.016096703708171844,
        0.0017261829925701022,
        0.0003293438348919153,
    ]
    actual_vector = upload_response["vector"]
    for actual, expected in zip(actual_vector, expected_vector):
        # OSX values are sometimes different from Linux in GHA
        assert math.isclose(actual, expected, rel_tol=1e-04)


@pytest.mark.asyncio
async def test_query_scsynth(
    api_client: APIClient, data: None, recordings_path: Path
) -> None:
    upload_response = await api_client.query_scsynth_upload(
        path=recordings_path / "ibn-arabi-44100-1s.wav"
    )
    query_response = await api_client.query_scsynth(vector=upload_response["vector"])
    assert query_response["entries"] and (
        query_response["entries"] == upload_response["entries"]
    )


@pytest.mark.asyncio
async def test_query_scsynth_upload(
    api_client: APIClient, data: None, recordings_path: Path
) -> None:
    upload_response = await api_client.query_scsynth_upload(
        path=recordings_path / "ibn-arabi-44100-1s.wav"
    )
    assert upload_response["analysis"] == {
        "is_voiced": True,
        "r:centroid:mean": 88.17190929125714,
        "r:centroid:std": 20.369653466305373,
        "r:chroma": [
            0.05874799740699781,
            0.04503894776984629,
            0.069211317607457,
            0.1115863282684586,
            0.1336060847311909,
            0.0937659737628369,
            0.04918238589219669,
            0.04224279223275008,
            0.0585237980876725,
            0.07917958861931981,
            0.1072172276373788,
            0.0979341172812862,
        ],
        "r:f0:mean": 65.12738627115885,
        "r:f0:std": 6.799382069906058,
        "r:flatness:mean": 0.08147228711975678,
        "r:flatness:std": 0.17854156684254593,
        "r:mfcc": [
            0.4984107557483899,
            0.015506617484554168,
            0.14230795477026253,
            -0.02995609644279685,
            0.09624801512046527,
            0.1683859033610231,
            0.2544622818628947,
            0.26708049719692556,
            0.25776375766082477,
            0.3831833788464146,
            0.2761819186390087,
            0.3476886949552003,
            0.23867011438774807,
            0.3092360318668427,
            0.2500811139101623,
            0.20612863042662222,
            0.2342671694294099,
            0.18811935891387283,
            0.2664916935146496,
            0.28691720962524414,
            0.2702096606134087,
            0.26736002663771313,
            0.23469349870117762,
            0.24804576830838315,
            0.2903657736637259,
            0.2515834108475716,
            0.22239993881153805,
            0.21388960076916602,
            0.2271559033342587,
            0.2544931064369858,
            0.26196783284346264,
            0.2550640678213489,
            0.24369035565084027,
            0.2496765358473665,
            0.2535663881609517,
            0.24937965969244638,
            0.2350220561668437,
            0.24053794033424827,
            0.25747482959301243,
            0.24746690338016838,
            0.24862708840318906,
            0.25,
        ],
        "r:onsets": 0.07526881720430108,
        "r:peak:mean": -54.702342423059605,
        "r:peak:std": 151.694523232371,
        "r:rms:mean": -53.331234178235455,
        "r:rms:std": 152.032813287156,
        "r:rolloff:mean": 75.15474323559833,
        "r:rolloff:std": 16.64606645139736,
        "w:centroid:mean": 88.17190929125714,
        "w:centroid:std": 20.369653466305373,
        "w:chroma": [
            0.05874799740699781,
            0.04503894776984629,
            0.069211317607457,
            0.1115863282684586,
            0.1336060847311909,
            0.0937659737628369,
            0.04918238589219669,
            0.04224279223275008,
            0.0585237980876725,
            0.07917958861931981,
            0.1072172276373788,
            0.0979341172812862,
        ],
        "w:f0:mean": 65.12738627115885,
        "w:f0:std": 6.799382069906058,
        "w:flatness:mean": 0.08147228711975678,
        "w:flatness:std": 0.17854156684254593,
        "w:mfcc": [
            0.4984107557483899,
            0.015506617484554168,
            0.14230795477026253,
            -0.02995609644279685,
            0.09624801512046527,
            0.1683859033610231,
            0.2544622818628947,
            0.26708049719692556,
            0.25776375766082477,
            0.3831833788464146,
            0.2761819186390087,
            0.3476886949552003,
            0.23867011438774807,
            0.3092360318668427,
            0.2500811139101623,
            0.20612863042662222,
            0.2342671694294099,
            0.18811935891387283,
            0.2664916935146496,
            0.28691720962524414,
            0.2702096606134087,
            0.26736002663771313,
            0.23469349870117762,
            0.24804576830838315,
            0.2903657736637259,
            0.2515834108475716,
            0.22239993881153805,
            0.21388960076916602,
            0.2271559033342587,
            0.2544931064369858,
            0.26196783284346264,
            0.2550640678213489,
            0.24369035565084027,
            0.2496765358473665,
            0.2535663881609517,
            0.24937965969244638,
            0.2350220561668437,
            0.24053794033424827,
            0.25747482959301243,
            0.24746690338016838,
            0.24862708840318906,
            0.25,
        ],
        "w:onsets": 0.5237858632918295,
        "w:peak:mean": -54.702342423059605,
        "w:peak:std": 151.694523232371,
        "w:rms:mean": -53.331234178235455,
        "w:rms:std": 152.032813287156,
        "w:rolloff:mean": 75.15474323559833,
        "w:rolloff:std": 16.64606645139736,
    }
    assert upload_response["entries"] == [
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 73.087,
            "frame_count": 60416,
            "start_frame": 0,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 140.186,
            "frame_count": 24064,
            "start_frame": 1467904,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 197.293,
            "frame_count": 120320,
            "start_frame": 1997312,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 211.016,
            "frame_count": 120320,
            "start_frame": 1973248,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 211.779,
            "frame_count": 120320,
            "start_frame": 2021376,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 214.007,
            "frame_count": 120320,
            "start_frame": 2189824,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 224.812,
            "frame_count": 120320,
            "start_frame": 2550784,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 225.391,
            "frame_count": 120320,
            "start_frame": 2237952,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 225.523,
            "frame_count": 120320,
            "start_frame": 2213888,
        },
        {
            "digest": "dd88610b66f3f053243f8f315345381fc70bca20d48ba32e27a7841d7676f969",
            "distance": 231.002,
            "frame_count": 120320,
            "start_frame": 2165760,
        },
    ]
    assert "timing" in upload_response
    assert upload_response["vector"] == [
        65.12738627115885,
        0.4984107557483899,
        0.015506617484554168,
        0.14230795477026253,
        -0.02995609644279685,
        0.09624801512046527,
        0.1683859033610231,
        0.2544622818628947,
        0.26708049719692556,
        0.25776375766082477,
        0.3831833788464146,
        0.2761819186390087,
        0.3476886949552003,
        0.23867011438774807,
        0.07526881720430108,
        -53.331234178235455,
    ]
