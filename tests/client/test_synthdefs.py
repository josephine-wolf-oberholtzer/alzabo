from uqbar.strings import normalize

from alzabo.client.synthdefs import (
    build_aux_send,
    build_basic_playback,
    build_warp_playback,
    hdverb,
    limiter,
)


def test_build_aux_send():
    assert str(build_aux_send()) == normalize(
        """
        synthdef:
            name: aux-send
            ugens:
            -   Control.kr:
                    aux_out: 0.0
                    gate: 1.0
                    mix: 0.5
                    out: 0.0
            -   In.ar:
                    bus: Control.kr[3:out]
            -   Linen.kr:
                    gate: Control.kr[1:gate]
                    attack_time: 0.25
                    sustain_level: 1.0
                    release_time: 5.0
                    done_action: 2.0
            -   BinaryOpUGen(MULTIPLICATION).ar/0:
                    left: In.ar[0]
                    right: Linen.kr[0]
            -   BinaryOpUGen(MULTIPLICATION).ar/1:
                    left: BinaryOpUGen(MULTIPLICATION).ar/0[0]
                    right: Control.kr[2:mix]
            -   BinaryOpUGen(MULTIPLICATION).ar/2:
                    left: In.ar[1]
                    right: Linen.kr[0]
            -   BinaryOpUGen(MULTIPLICATION).ar/3:
                    left: BinaryOpUGen(MULTIPLICATION).ar/2[0]
                    right: Control.kr[2:mix]
            -   Out.ar/0:
                    bus: Control.kr[0:aux_out]
                    source[0]: BinaryOpUGen(MULTIPLICATION).ar/1[0]
                    source[1]: BinaryOpUGen(MULTIPLICATION).ar/3[0]
            -   BinaryOpUGen(SUBTRACTION).kr:
                    left: 1.0
                    right: Control.kr[2:mix]
            -   BinaryOpUGen(MULTIPLICATION).ar/4:
                    left: BinaryOpUGen(MULTIPLICATION).ar/0[0]
                    right: BinaryOpUGen(SUBTRACTION).kr[0]
            -   BinaryOpUGen(MULTIPLICATION).ar/5:
                    left: BinaryOpUGen(MULTIPLICATION).ar/2[0]
                    right: BinaryOpUGen(SUBTRACTION).kr[0]
            -   Out.ar/1:
                    bus: Control.kr[3:out]
                    source[0]: BinaryOpUGen(MULTIPLICATION).ar/4[0]
                    source[1]: BinaryOpUGen(MULTIPLICATION).ar/5[0]
        """
    )


def test_build_basic_playback():
    assert str(build_basic_playback()) == normalize(
        """
        synthdef:
            name: basic-playback
            ugens:
            -   Control.kr:
                    buffer_id: 0.0
                    gain: 0.0
                    out: 0.0
                    panning: 0.0
            -   PlayBuf.ar:
                    buffer_id: Control.kr[0:buffer_id]
                    rate: 1.0
                    trigger: 1.0
                    start_position: 0.0
                    loop: 0.0
                    done_action: 0.0
            -   BufDur.kr:
                    buffer_id: Control.kr[0:buffer_id]
            -   Line.kr:
                    start: 0.0
                    stop: 1.0
                    duration: BufDur.kr[0]
                    done_action: 2.0
            -   UnaryOpUGen(HANNING_WINDOW).kr:
                    source: Line.kr[0]
            -   BinaryOpUGen(MULTIPLICATION).ar/0:
                    left: PlayBuf.ar[0]
                    right: UnaryOpUGen(HANNING_WINDOW).kr[0]
            -   UnaryOpUGen(DB_TO_AMPLITUDE).kr:
                    source: Control.kr[1:gain]
            -   BinaryOpUGen(MULTIPLICATION).ar/1:
                    left: BinaryOpUGen(MULTIPLICATION).ar/0[0]
                    right: UnaryOpUGen(DB_TO_AMPLITUDE).kr[0]
            -   PanAz.ar:
                    source: BinaryOpUGen(MULTIPLICATION).ar/1[0]
                    position: Control.kr[3:panning]
                    amplitude: 1.0
                    width: 2.0
                    orientation: 0.5
            -   Out.ar:
                    bus: Control.kr[2:out]
                    source[0]: PanAz.ar[0]
                    source[1]: PanAz.ar[1]
        """
    )


def test_build_warp_playback():
    assert str(build_warp_playback()) == normalize(
        """
        synthdef:
            name: warp-playback
            ugens:
            -   Control.kr:
                    buffer_id: 0.0
                    gain: 0.0
                    highpass_frequency: 100.0
                    out: 0.0
                    overlaps: 4.0
                    panning: 0.0
                    start: 0.0
                    stop: 1.0
                    time_scaling: 1.0
                    transposition: 0.0
            -   BufDur.kr:
                    buffer_id: Control.kr[0:buffer_id]
            -   BinaryOpUGen(MULTIPLICATION).kr/0:
                    left: BufDur.kr[0]
                    right: Control.kr[8:time_scaling]
            -   Line.kr/0:
                    start: 0.0
                    stop: 1.0
                    duration: BinaryOpUGen(MULTIPLICATION).kr/0[0]
                    done_action: 2.0
            -   UnaryOpUGen(HANNING_WINDOW).kr:
                    source: Line.kr/0[0]
            -   BinaryOpUGen(MULTIPLICATION).kr/1:
                    left: UnaryOpUGen(HANNING_WINDOW).kr[0]
                    right: 0.5
            -   BinaryOpUGen(MULTIPLICATION).kr/2:
                    left: UnaryOpUGen(HANNING_WINDOW).kr[0]
                    right: 0.5
            -   Line.kr/1:
                    start: Control.kr[6:start]
                    stop: Control.kr[7:stop]
                    duration: BinaryOpUGen(MULTIPLICATION).kr/0[0]
                    done_action: 0.0
            -   UnaryOpUGen(DB_TO_AMPLITUDE).kr/0:
                    source: Control.kr[1:gain]
            -   BinaryOpUGen(MULTIPLICATION).kr/3:
                    left: BinaryOpUGen(MULTIPLICATION).kr/1[0]
                    right: UnaryOpUGen(DB_TO_AMPLITUDE).kr/0[0]
            -   UnaryOpUGen(DB_TO_AMPLITUDE).kr/1:
                    source: Control.kr[1:gain]
            -   BinaryOpUGen(MULTIPLICATION).kr/4:
                    left: BinaryOpUGen(MULTIPLICATION).kr/2[0]
                    right: UnaryOpUGen(DB_TO_AMPLITUDE).kr/1[0]
            -   ExpRand.ir/0:
                    minimum: 0.01
                    maximum: 0.1
            -   LFDNoise3.kr/0:
                    frequency: ExpRand.ir/0[0]
            -   MulAdd.kr/0:
                    source: LFDNoise3.kr/0[0]
                    multiplier: 0.225
                    addend: 0.275
            -   BinaryOpUGen(SUBTRACTION).kr/0:
                    left: BinaryOpUGen(MULTIPLICATION).kr/0[0]
                    right: MulAdd.kr/0[0]
            -   BinaryOpUGen(FLOAT_DIVISION).kr/0:
                    left: BinaryOpUGen(SUBTRACTION).kr/0[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/0[0]
            -   LFNoise2.kr/0:
                    frequency: 0.5
            -   MulAdd.kr/1:
                    source: LFNoise2.kr/0[0]
                    multiplier: 0.25
                    addend: 0.75
            -   BinaryOpUGen(MULTIPLICATION).kr/5:
                    left: Control.kr[5:panning]
                    right: MulAdd.kr/1[0]
            -   LFNoise2.kr/1:
                    frequency: 0.1
            -   BinaryOpUGen(MULTIPLICATION).kr/6:
                    left: LFNoise2.kr/1[0]
                    right: 0.25
            -   BinaryOpUGen(ADDITION).kr/0:
                    left: Control.kr[9:transposition]
                    right: BinaryOpUGen(MULTIPLICATION).kr/6[0]
            -   UnaryOpUGen(SEMITONES_TO_RATIO).kr/0:
                    source: BinaryOpUGen(ADDITION).kr/0[0]
            -   LFNoise2.kr/2:
                    frequency: 1.0
            -   BinaryOpUGen(MULTIPLICATION).kr/7:
                    left: LFNoise2.kr/2[0]
                    right: 0.05
            -   BinaryOpUGen(ADDITION).kr/1:
                    left: Line.kr/1[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/7[0]
            -   Clip.kr/0:
                    source: BinaryOpUGen(ADDITION).kr/1[0]
                    minimum: 0.0
                    maximum: 1.0
            -   BinaryOpUGen(MULTIPLICATION).kr/8:
                    left: Clip.kr/0[0]
                    right: BinaryOpUGen(FLOAT_DIVISION).kr/0[0]
            -   Warp1.ar/0:
                    buffer_id: Control.kr[0:buffer_id]
                    pointer: BinaryOpUGen(MULTIPLICATION).kr/8[0]
                    frequency_scaling: UnaryOpUGen(SEMITONES_TO_RATIO).kr/0[0]
                    window_size: MulAdd.kr/0[0]
                    envelope_buffer_id: -1.0
                    overlaps: Control.kr[4:overlaps]
                    window_rand_ratio: 0.15
                    interpolation: 4.0
            -   HPF.ar/0:
                    source: Warp1.ar/0[0]
                    frequency: Control.kr[2:highpass_frequency]
            -   BinaryOpUGen(MULTIPLICATION).ar/0:
                    left: HPF.ar/0[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/3[0]
            -   PanAz.ar/0:
                    source: BinaryOpUGen(MULTIPLICATION).ar/0[0]
                    position: BinaryOpUGen(MULTIPLICATION).kr/5[0]
                    amplitude: 1.0
                    width: 2.0
                    orientation: 0.5
            -   ExpRand.ir/1:
                    minimum: 0.01
                    maximum: 0.1
            -   LFDNoise3.kr/1:
                    frequency: ExpRand.ir/1[0]
            -   MulAdd.kr/2:
                    source: LFDNoise3.kr/1[0]
                    multiplier: 0.225
                    addend: 0.275
            -   BinaryOpUGen(SUBTRACTION).kr/1:
                    left: BinaryOpUGen(MULTIPLICATION).kr/0[0]
                    right: MulAdd.kr/2[0]
            -   BinaryOpUGen(FLOAT_DIVISION).kr/1:
                    left: BinaryOpUGen(SUBTRACTION).kr/1[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/0[0]
            -   LFNoise2.kr/3:
                    frequency: 0.5
            -   MulAdd.kr/3:
                    source: LFNoise2.kr/3[0]
                    multiplier: 0.25
                    addend: 0.75
            -   BinaryOpUGen(MULTIPLICATION).kr/9:
                    left: Control.kr[5:panning]
                    right: MulAdd.kr/3[0]
            -   LFNoise2.kr/4:
                    frequency: 0.1
            -   BinaryOpUGen(MULTIPLICATION).kr/10:
                    left: LFNoise2.kr/4[0]
                    right: 0.25
            -   BinaryOpUGen(ADDITION).kr/2:
                    left: Control.kr[9:transposition]
                    right: BinaryOpUGen(MULTIPLICATION).kr/10[0]
            -   UnaryOpUGen(SEMITONES_TO_RATIO).kr/1:
                    source: BinaryOpUGen(ADDITION).kr/2[0]
            -   LFNoise2.kr/5:
                    frequency: 1.0
            -   BinaryOpUGen(MULTIPLICATION).kr/11:
                    left: LFNoise2.kr/5[0]
                    right: 0.05
            -   BinaryOpUGen(ADDITION).kr/3:
                    left: Line.kr/1[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/11[0]
            -   Clip.kr/1:
                    source: BinaryOpUGen(ADDITION).kr/3[0]
                    minimum: 0.0
                    maximum: 1.0
            -   BinaryOpUGen(MULTIPLICATION).kr/12:
                    left: Clip.kr/1[0]
                    right: BinaryOpUGen(FLOAT_DIVISION).kr/1[0]
            -   Warp1.ar/1:
                    buffer_id: Control.kr[0:buffer_id]
                    pointer: BinaryOpUGen(MULTIPLICATION).kr/12[0]
                    frequency_scaling: UnaryOpUGen(SEMITONES_TO_RATIO).kr/1[0]
                    window_size: MulAdd.kr/2[0]
                    envelope_buffer_id: -1.0
                    overlaps: Control.kr[4:overlaps]
                    window_rand_ratio: 0.15
                    interpolation: 4.0
            -   HPF.ar/1:
                    source: Warp1.ar/1[0]
                    frequency: Control.kr[2:highpass_frequency]
            -   BinaryOpUGen(MULTIPLICATION).ar/1:
                    left: HPF.ar/1[0]
                    right: BinaryOpUGen(MULTIPLICATION).kr/4[0]
            -   PanAz.ar/1:
                    source: BinaryOpUGen(MULTIPLICATION).ar/1[0]
                    position: BinaryOpUGen(MULTIPLICATION).kr/9[0]
                    amplitude: 1.0
                    width: 2.0
                    orientation: 0.5
            -   BinaryOpUGen(ADDITION).ar/0:
                    left: PanAz.ar/0[0]
                    right: PanAz.ar/1[0]
            -   LeakDC.ar/0:
                    source: BinaryOpUGen(ADDITION).ar/0[0]
                    coefficient: 0.995
            -   BinaryOpUGen(FLOAT_DIVISION).ar/0:
                    left: LeakDC.ar/0[0]
                    right: 2.0
            -   BinaryOpUGen(ADDITION).ar/1:
                    left: PanAz.ar/0[1]
                    right: PanAz.ar/1[1]
            -   LeakDC.ar/1:
                    source: BinaryOpUGen(ADDITION).ar/1[0]
                    coefficient: 0.995
            -   BinaryOpUGen(FLOAT_DIVISION).ar/1:
                    left: LeakDC.ar/1[0]
                    right: 2.0
            -   Out.ar:
                    bus: Control.kr[3:out]
                    source[0]: BinaryOpUGen(FLOAT_DIVISION).ar/0[0]
                    source[1]: BinaryOpUGen(FLOAT_DIVISION).ar/1[0]
        """
    )


def test_hdverb():
    assert str(hdverb) == normalize(
        """
        synthdef:
            name: hdverb
            ugens:
            -   Control.kr:
                    decay: 3.5
                    in_: 0.0
                    lpf1: 2000.0
                    lpf2: 6000.0
                    out: 0.0
                    predelay: 0.025
            -   In.ar:
                    bus: Control.kr[1:in_]
            -   Clip.kr:
                    source: Control.kr[5:predelay]
                    minimum: 0.0001
                    maximum: 0.5
            -   DelayN.ar:
                    source: In.ar[0]
                    maximum_delay_time: 0.5
                    delay_time: Clip.kr[0]
            -   ExpRand.ir/0:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/0:
                    frequency: ExpRand.ir/0[0]
            -   LinExp.kr/0:
                    source: LFNoise2.kr/0[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/0:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/0[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/0:
                    source: CombL.ar/0[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/1:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/1:
                    frequency: ExpRand.ir/1[0]
            -   LinExp.kr/1:
                    source: LFNoise2.kr/1[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/1:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/1[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/1:
                    source: CombL.ar/1[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/2:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/2:
                    frequency: ExpRand.ir/2[0]
            -   LinExp.kr/2:
                    source: LFNoise2.kr/2[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/2:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/2[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/2:
                    source: CombL.ar/2[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/3:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/3:
                    frequency: ExpRand.ir/3[0]
            -   LinExp.kr/3:
                    source: LFNoise2.kr/3[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/3:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/3[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/3:
                    source: CombL.ar/3[0]
                    frequency: Control.kr[2:lpf1]
            -   Sum4.ar/0:
                    input_one: LPF.ar/0[0]
                    input_two: LPF.ar/1[0]
                    input_three: LPF.ar/2[0]
                    input_four: LPF.ar/3[0]
            -   ExpRand.ir/4:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/4:
                    frequency: ExpRand.ir/4[0]
            -   LinExp.kr/4:
                    source: LFNoise2.kr/4[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/4:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/4[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/4:
                    source: CombL.ar/4[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/5:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/5:
                    frequency: ExpRand.ir/5[0]
            -   LinExp.kr/5:
                    source: LFNoise2.kr/5[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/5:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/5[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/5:
                    source: CombL.ar/5[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/6:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/6:
                    frequency: ExpRand.ir/6[0]
            -   LinExp.kr/6:
                    source: LFNoise2.kr/6[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/6:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/6[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/6:
                    source: CombL.ar/6[0]
                    frequency: Control.kr[2:lpf1]
            -   ExpRand.ir/7:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/7:
                    frequency: ExpRand.ir/7[0]
            -   LinExp.kr/7:
                    source: LFNoise2.kr/7[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   CombL.ar/7:
                    source: DelayN.ar[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/7[0]
                    decay_time: Control.kr[0:decay]
            -   LPF.ar/7:
                    source: CombL.ar/7[0]
                    frequency: Control.kr[2:lpf1]
            -   Sum4.ar/1:
                    input_one: LPF.ar/4[0]
                    input_two: LPF.ar/5[0]
                    input_three: LPF.ar/6[0]
                    input_four: LPF.ar/7[0]
            -   BinaryOpUGen(ADDITION).ar:
                    left: Sum4.ar/0[0]
                    right: Sum4.ar/1[0]
            -   BinaryOpUGen(MULTIPLICATION).ar/0:
                    left: BinaryOpUGen(ADDITION).ar[0]
                    right: 0.25
            -   ExpRand.ir/8:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/8:
                    frequency: ExpRand.ir/8[0]
            -   LinExp.kr/8:
                    source: LFNoise2.kr/8[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/0:
                    source: BinaryOpUGen(MULTIPLICATION).ar/0[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/8[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/9:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/9:
                    frequency: ExpRand.ir/9[0]
            -   LinExp.kr/9:
                    source: LFNoise2.kr/9[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/1:
                    source: AllpassL.ar/0[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/9[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/10:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/10:
                    frequency: ExpRand.ir/10[0]
            -   LinExp.kr/10:
                    source: LFNoise2.kr/10[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/2:
                    source: AllpassL.ar/1[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/10[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/11:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/11:
                    frequency: ExpRand.ir/11[0]
            -   LinExp.kr/11:
                    source: LFNoise2.kr/11[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/3:
                    source: AllpassL.ar/2[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/11[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/12:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/12:
                    frequency: ExpRand.ir/12[0]
            -   LinExp.kr/12:
                    source: LFNoise2.kr/12[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/4:
                    source: AllpassL.ar/3[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/12[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/13:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/13:
                    frequency: ExpRand.ir/13[0]
            -   LinExp.kr/13:
                    source: LFNoise2.kr/13[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/5:
                    source: AllpassL.ar/4[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/13[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/14:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/14:
                    frequency: ExpRand.ir/14[0]
            -   LinExp.kr/14:
                    source: LFNoise2.kr/14[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/6:
                    source: AllpassL.ar/5[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/14[0]
                    decay_time: Control.kr[0:decay]
            -   ExpRand.ir/15:
                    minimum: 0.02
                    maximum: 0.04
            -   LFNoise2.kr/15:
                    frequency: ExpRand.ir/15[0]
            -   LinExp.kr/15:
                    source: LFNoise2.kr/15[0]
                    input_minimum: -1.0
                    input_maximum: 1.0
                    output_minimum: 0.02
                    output_maximum: 0.099
            -   AllpassL.ar/7:
                    source: AllpassL.ar/6[0]
                    maximum_delay_time: 0.1
                    delay_time: LinExp.kr/15[0]
                    decay_time: Control.kr[0:decay]
            -   LeakDC.ar:
                    source: AllpassL.ar/7[0]
                    coefficient: 0.995
            -   LPF.ar/8:
                    source: LeakDC.ar[0]
                    frequency: Control.kr[3:lpf2]
            -   BinaryOpUGen(MULTIPLICATION).ar/1:
                    left: LPF.ar/8[0]
                    right: 0.5
            -   Out.ar:
                    bus: Control.kr[4:out]
                    source[0]: BinaryOpUGen(MULTIPLICATION).ar/1[0]
        """
    )


def test_limiter():
    assert str(limiter) == normalize(
        """
        synthdef:
            name: limiter
            ugens:
            -   Control.kr:
                    in_: 0.0
                    out: 0.0
            -   In.ar:
                    bus: Control.kr[0:in_]
            -   LPF.ar/0:
                    source: In.ar[0]
                    frequency: 150.0
            -   BinaryOpUGen(SUBTRACTION).ar/0:
                    left: In.ar[0]
                    right: LPF.ar/0[0]
            -   LPF.ar/1:
                    source: BinaryOpUGen(SUBTRACTION).ar/0[0]
                    frequency: 1500.0
            -   BinaryOpUGen(SUBTRACTION).ar/1:
                    left: BinaryOpUGen(SUBTRACTION).ar/0[0]
                    right: LPF.ar/1[0]
            -   LPF.ar/2:
                    source: BinaryOpUGen(SUBTRACTION).ar/1[0]
                    frequency: 6000.0
            -   BinaryOpUGen(SUBTRACTION).ar/2:
                    left: BinaryOpUGen(SUBTRACTION).ar/1[0]
                    right: LPF.ar/2[0]
            -   DelayN.ar/0:
                    source: BinaryOpUGen(SUBTRACTION).ar/2[0]
                    maximum_delay_time: 0.01
                    delay_time: 0.01
            -   Compander.ar/0:
                    source: BinaryOpUGen(SUBTRACTION).ar/2[0]
                    control: DelayN.ar/0[0]
                    threshold: 0.25
                    slope_below: 1.0
                    slope_above: 0.25
                    clamp_time: 0.01
                    relax_time: 0.1
            -   DelayN.ar/1:
                    source: LPF.ar/2[0]
                    maximum_delay_time: 0.01
                    delay_time: 0.01
            -   Compander.ar/1:
                    source: LPF.ar/2[0]
                    control: DelayN.ar/1[0]
                    threshold: 0.25
                    slope_below: 1.0
                    slope_above: 0.25
                    clamp_time: 0.01
                    relax_time: 0.1
            -   DelayN.ar/2:
                    source: LPF.ar/1[0]
                    maximum_delay_time: 0.01
                    delay_time: 0.01
            -   Compander.ar/2:
                    source: LPF.ar/1[0]
                    control: DelayN.ar/2[0]
                    threshold: 0.25
                    slope_below: 1.0
                    slope_above: 0.25
                    clamp_time: 0.01
                    relax_time: 0.1
            -   DelayN.ar/3:
                    source: LPF.ar/0[0]
                    maximum_delay_time: 0.01
                    delay_time: 0.01
            -   Compander.ar/3:
                    source: LPF.ar/0[0]
                    control: DelayN.ar/3[0]
                    threshold: 0.25
                    slope_below: 1.0
                    slope_above: 0.25
                    clamp_time: 0.01
                    relax_time: 0.1
            -   Sum4.ar:
                    input_one: Compander.ar/3[0]
                    input_two: Compander.ar/2[0]
                    input_three: Compander.ar/1[0]
                    input_four: Compander.ar/0[0]
            -   Limiter.ar:
                    source: Sum4.ar[0]
                    level: 1.0
                    duration: 0.1
            -   ReplaceOut.ar:
                    bus: Control.kr[1:out]
                    source[0]: Limiter.ar[0]
        """
    )
